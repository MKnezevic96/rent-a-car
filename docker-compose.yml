version: '3'
services:

#  consul-server:
#    image: consul-server
#    build:
#      context: ./consul-server
#      dockerfile: Dockerfile
#    tty: true
#    ports: 
#      - "8500:8500"
#    networks:
#      first-network:
#        ipv4_address: 172.20.0.2

  admin-service:
    image: admin_service
    build:
      context: ./services/admin_service
      dockerfile: Dockerfile
    tty: true
    ports:
      - "127.0.0.1:8284:8284"
    networks:
      - first-network
#    depends_on:
#      - consul-server

  ad-service:
    image: ad_service
    build:
      context: ./services/ad_service
      dockerfile: Dockerfile
    tty: true
    ports:
      - "127.0.0.1:8283:8283"
    networks:
      - first-network
#    depends_on:
#      - consul-server

  renting-service:
    image: renting_service
    build:
      context: ./services/renting_service
      dockerfile: Dockerfile
    tty: true
    ports:
      - "127.0.0.1:8287:8287"
    networks:
      - first-network
#    depends_on:
#      - consul-server

#  authentication-service:
#    image: authentication_service
#    build:
#      context: ./services/authentication_service
#      dockerfile: Dockerfile
#    tty: true
#    ports:
#      - "127.0.0.1:8285:8285"
#    networks:
#      - static-network
#    depends_on:
#      - consul-server

#  gps-service:
#     image: gps_service
#     build:
#       context: ./services/gps_service
#       dockerfile: Dockerfile
#     tty: true
#     ports:
#      - "127.0.0.1:8286:8286"
#     networks:
#       - static-network
#     depends_on:
#       - consul-server

#  security-service:
#     image: security_service
#     build:
#       context: ./services/security_service
#       dockerfile: Dockerfile
#     tty: true
#     ports:
#      - "127.0.0.1:8288:8288"
#     networks:
#       - static-network
#     depends_on:
#       - consul-server

  agentski-bekend:
     image: agentski_bekend
     networks: 
      - first-network
     build:
       context: ./agentski_bekend
       dockerfile: Dockerfile
     ports:
      - 127.0.0.1:8282:8282
     environment:
       DATABASE_USERNAME: 'sa'
       DATABASE_PASSWORD: 'admin'
       DATABASE_DOMAIN: 'agentska-baza'
       DATABASE_PORT: "3306"
     depends_on:
#       - consul-server
       - agentska-baza

#  gateway:
#     image: gateway
#     build:
#       context: ./gateway
#       dockerfile: Dockerfile
#     tty: true
#     networks:
#       - static-network
#     depends_on:
#       - consul-server

  agentski-frontend:
     image: agentski-frontend
     build:
       context: ./agentski-frontend
       dockerfile: Dockerfile
     tty: true
     ports:
      - "127.0.0.1:4200:80"
     networks:
       - first-network
     depends_on:
       - agentski-bekend

  agentska-baza:
    restart: always
    networks: 
     - first-network
    container_name: agentska-baza
    ports:
     - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_DATABASE: 'agentska-baza'
      MYSQL_USER: 'sa'
      MYSQL_PASSWORD: 'admin'
    image: mysql
    volumes:
      - my-datavolume:/var/lib/docker/mysqlAgent

  db:
    restart: always
    networks: 
     - first-network
    container_name: db
    ports:
     - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_DATABASE: 'main_db'
      MYSQL_USER: 'sa'
      MYSQL_PASSWORD: 'admin'
    image: mysql
    volumes:
      - my-datavolume:/var/lib/docker/mysqlMainDb
    
#    healthcheck:
#      test: "/usr/bin/mysql --user=root --password=password --execute \"SHOW DATABASES;\""
#      interval: 2s
#      timeout: 20s
#      retries: 10

#  mysql:
#    image: mysql:8.0.19
#    container_name: mysql
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: password
#      MYSQL_USER: sa
#      MYSQL_PASSWORD: zgadija
#      MYSQL_DATABASE: servers
#    volumes:
#      - mysql-data:/var/lib/mysql


networks:
  first-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16


volumes:
  my-datavolume:
