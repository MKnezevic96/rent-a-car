version: '3'
services:


  eureka:
    build: ./eureka
    container_name: eureka
    ports:
     - "8761:8761"
    tty: true
    networks:
     - first-network

  zuul:
    build: ./zuul
    container_name: zuul
    ports:
    - "8083:8083"
    environment:
      - REGISTRY_HOST=eureka
    tty: true
    networks:
      - first-network
    depends_on:
      - eureka
      - ad-service
      - admin-service
      - authentication-service
      - gps-service
      - security-service
      - renting-service

#  nginx:
#    image: nginx:latest
#    container_name: nginx-server
#    ports:
#      - "80:80"
#      - "443:443"
#      - "444:444"
#      - "445:445"
#      - "446:446"
#      - "447:447"
#      - "448:448"
#    volumes:
#      - /consul-certs:/etc/nginx/certs
#      - ./nginx:/etc/nginx/nginx


  admin-service:
    image: admin_service
    container_name: admin-service
    build:
      context: ./services/admin_service
      dockerfile: Dockerfile
    tty: true
    environment: 
      - REGISTRY_HOST=eureka
    ports:
      - "8284:444"
    networks:
      - first-network
    depends_on:
      - eureka

  ad-service:
    image: ad_service
    container_name: ad-service
    environment:
      - REGISTRY_HOST=eureka
    depends_on:
      - eureka
    build:
      context: ./services/ad_service
      dockerfile: Dockerfile
    tty: true
    ports:
      - "8283:443"
    networks:
      - first-network

  renting-service:
    image: renting_service
    container_name: renting-service
    build: 
      context: ./services/renting_service
      dockerfile: Dockerfile
    tty: true
    environment:
       DATABASE_USERNAME: 'sa'
       DATABASE_PASSWORD: 'admin	'
       DATABASE_DOMAIN: 'db'
#       DATABASE_PORT: "3306"
#       REGISTRY_HOST: eureka
    ports:
     - "127.0.0.1:8287:447"
    networks:
      - first-network
    depends_on:
       - db
       - eureka
###################

#  agentski-bekend:
#     image: agentski_bekend
#     networks: 
#      - first-network
#     build:
#       context: ./agentski_bekend
#       dockerfile: Dockerfile
#     tty: true
#     ports:
#      - 127.0.0.1:8282:8282
#     environment:
#       DATABASE_USERNAME: 'root'
#       DATABASE_PASSWORD: 'password'
#       DATABASE_DOMAIN: 'agentska-baza'
#       DATABASE_PORT: "3306"
#     depends_on:
#       - agentska-baza



#  renting-service:
#    image: renting_service
#    container_name: renting-service
#    build:
#      context: ./services/renting_service
#      dockerfile: Dockerfile
#    tty: true
#    environment:
#      - REGISTRY_HOST=eureka
#    ports:
#      - "8287:8287"
#    networks:
#      - first-network
#    depends_on:
#      - eureka

###################

  authentication-service:
    image: authentication_service
    container_name: authentication-service
    build:
      context: ./services/authentication_service
      dockerfile: Dockerfile
    tty: true
    environment:
      - REGISTRY_HOST=eureka
    ports:
      - "8285:445"
    networks:
      - first-network
    depends_on:
      - eureka

  gps-service:
    image: gps_service
    container_name: gps-service
    build:
      context: ./services/gps_service
      dockerfile: Dockerfile
    tty: true
    environment:
      - REGISTRY_HOST=eureka
    ports:
      - "127.0.0.1:8286:446"
    networks:
      - first-network
    depends_on:
      - eureka

  security-service:
    image: security_service
    container_name: security-service
    build:
      context: ./services/security_service
      dockerfile: Dockerfile
    tty: true
    environment:
      - REGISTRY_HOST=eureka
    ports:
      - "127.0.0.1:8288:448"
    networks:
      - first-network
    depends_on:
      - eureka

#=======
#  admin-service:
#    image: admin_service
#    container_name: admin-service
#    build:
#      context: ./services/admin_service
#      dockerfile: Dockerfile
#    tty: true
#    environment:
#      - REGISTRY_HOST=eureka
#    ports:
#      - "8284:8284"
#    networks:
#      - static-network
#    depends_on:
#      - eureka

#  ad-service:
#    image: ad_service
#    container_name: ad-service
#    build:
#      context: ./services/ad_service
#      dockerfile: Dockerfile
#    tty: true
#    environment:
#      - REGISTRY_HOST=eureka
#    ports:
#      - "8283:8283"
#    networks:
#      - static-network
#    depends_on:
#      - eureka



#  authentication-service:
#    image: authentication_service
#    container_name: authentication-service
#    build:
#      context: ./services/authentication_service
#      dockerfile: Dockerfile
#    tty: true
#    environment:
#      - REGISTRY_HOST=eureka
#    ports:
#      - "8285:8285"
#    networks:
#      - static-network
#    depends_on:
#      - eureka

#  gps-service:
#    image: gps_service
#    container_name: gps-service
#    build:
#      context: ./services/gps_service
#      dockerfile: Dockerfile
#    tty: true
#    environment:
#      - REGISTRY_HOST=eureka
#    ports:
#      - "8286:8286"
#    networks:
#      - static-network
#    depends_on:
#      - eureka

#  security-service:
#    image: security_service
#    container_name: security-service
#    build:
#     context: ./services/security_service
#      dockerfile: Dockerfile
#    tty: true
#    environment:
#      - REGISTRY_HOST=eureka
#    ports:
#      - "8288:8288"
#    networks:
#      - static-network
#    depends_on:
#      - eureka


#  agentski-bekend:
#     image: agentski_bekend
#     container_name: agentski-bekend
#     build:
#       context: ./agentski_bekend
#       dockerfile: Dockerfile
#     tty: true
#     ports:
#     - "8282:8282"
#     networks:
#       - static-network
#     depends_on:
 #      - eureka
#       - agentska-baza
#     environment:
#       - REGISTRY_HOST=eureka
#       DATABASE_USERMANE: root
#       DATABASE_PASSWORD: admin
#       DATABASE_DOMAIN: mysql
#       DATABASE_PORT: "127.0.0.1:3306"
#>>>>>>> master



  db:
    restart: always
    networks: 
     - first-network
    container_name: db
    ports:
     - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'admin'
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'sa'
      MYSQL_PASSWORD: 'admin'
    image: mysql:8
    volumes:
      - my-datavolume:/var/lib/docker/mainDb

networks:
  first-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16


volumes:
  my-datavolume:
